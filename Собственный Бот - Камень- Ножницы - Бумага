import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram import F
import random

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="6853584795:AAG1X_3nVDG9SzatOwKvlxooIpAsrBhYXrE")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


# —Ö–µ–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    # –Ω–∞–±–æ—Ä –Ω–∞—à–∏—Ö –∫–Ω–æ–ø–æ–∫
    kb = [
        [types.KeyboardButton(text="–î–∞–≤–∞–π!"),
         types.KeyboardButton(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ—Ç")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É"
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç \n \n –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É '–ö–∞–º–µ–Ω—å üóø - –ù–æ–∂–Ω–∏—Ü—ã ‚úÇ - –ë—É–º–∞–≥–∞ üìú'\n \n –ï—Å–ª–∏ –∑–∞–±—ã–ª –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞–∂–º–∏, —Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /help \n \n –ò–≥—Ä–∞–µ–º?",
        reply_markup=keyboard)


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help
@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–î–∞–≤–∞–π!"),
         types.KeyboardButton(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ—Ç")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É"
    )
    await message.answer(
        "–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º: \n –ë—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å (¬´–±—É–º–∞–≥–∞ –æ–±—ë—Ä—Ç—ã–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å¬ª).\n –ö–∞–º–µ–Ω—å –ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã (¬´–∫–∞–º–µ–Ω—å –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã¬ª). \n –ù–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É (¬´–Ω–æ–∂–Ω–∏—Ü—ã —Ä–∞–∑—Ä–µ–∑–∞—é—Ç –±—É–º–∞–≥—É¬ª). –ò–≥—Ä–∞–µ–º?",
        reply_markup=keyboard)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–∞–≤–∞–π!"
@dp.message(F.text.lower() == "–¥–∞–≤–∞–π!")
async def cmd_random(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–ö–∞–º–µ–Ω—å üóø"),
         types.KeyboardButton(text="–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ")],
        [types.KeyboardButton(text="–ë—É–º–∞–≥–∞ üìú")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–°–¥–µ–ª–∞–π –≤—ã–±–æ—Ä:"
    )
    await message.reply(f'GUT! –°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!', reply_markup=keyboard)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ö–æ—á–µ—Ç –∏–≥—Ä–∞—Ç—å
@dp.message(F.text.lower() == "–∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–µ—Ç")
async def cmd_random(message: types.Message):
    await message.reply(
        "–ñ–∞–ª—å. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, —Å–∫–∞–∂–∏ –º–Ω–µ!"
    )


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –ö–∞–º–µ–Ω—å üóø
@dp.message(F.text.lower() == "–∫–∞–º–µ–Ω—å üóø")
async def cmd_random(message: types.Message):
    random_choice = random.choice(["–ö–∞–º–µ–Ω—å üóø", "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ", "–ë—É–º–∞–≥–∞ üìú"])
    if random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ" or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == "–ë—É–º–∞–≥–∞ üìú":
        answer_bot = '–ù–∏—á—å—è'
    elif random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ë—É–º–∞–≥–∞ üìú':
        answer_bot = '–Ø –≤—ã–π–≥—Ä–∞–ª'
    elif random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ë—É–º–∞–≥–∞ üìú' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ':
        answer_bot = '–¢—ã –≤—ã–π–≥—Ä–∞–ª'
    else:
        answer_bot = '–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–≤–µ—Ç—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç! /start'
    await message.reply(
        f"–ú–æ–π –≤—ã–±–æ—Ä {random_choice}, –∞ —Ç–≤–æ–π {message.text}"

    )
    kb = [
        [types.KeyboardButton(text="–î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!"),
         types.KeyboardButton(text="–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ.–°–ø–∞—Å–∏–±–æ!")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–°–¥–µ–ª–∞–π –≤—ã–±–æ—Ä:"
    )
    await message.answer(f"{answer_bot} –°—ã–≥—Ä–∞–µ–º –µ—â–µ?", reply_markup=keyboard)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –ë—É–º–∞–≥–∞ üìú
@dp.message(F.text.lower() == "–±—É–º–∞–≥–∞ üìú")
async def cmd_random(message: types.Message):
    random_choice = random.choice(["–ö–∞–º–µ–Ω—å üóø", "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ", "–ë—É–º–∞–≥–∞ üìú"])
    if random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ" or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == "–ë—É–º–∞–≥–∞ üìú":
        answer_bot = '–ù–∏—á—å—è'
    elif random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ë—É–º–∞–≥–∞ üìú':
        answer_bot = '–Ø –≤—ã–π–≥—Ä–∞–ª'
    elif random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ë—É–º–∞–≥–∞ üìú' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ':
        answer_bot = '–¢—ã –≤—ã–π–≥—Ä–∞–ª'
    else:
        answer_bot = '–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–≤–µ—Ç—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç! /start'
    await message.reply(
        f"–ú–æ–π –≤—ã–±–æ—Ä {random_choice}, –∞ —Ç–≤–æ–π {message.text}"

    )
    kb = [
        [types.KeyboardButton(text="–î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!"),
         types.KeyboardButton(text="–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ.–°–ø–∞—Å–∏–±–æ!")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–°–¥–µ–ª–∞–π –≤—ã–±–æ—Ä:"
    )
    await message.answer(f"{answer_bot} –°—ã–≥—Ä–∞–µ–º –µ—â–µ?", reply_markup=keyboard)


# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–æ–∂–Ω–∏—Ü—ã ‚úÇ
@dp.message(F.text.lower() == "–Ω–æ–∂–Ω–∏—Ü—ã ‚úÇ")
async def cmd_random(message: types.Message):
    random_choice = random.choice(["–ö–∞–º–µ–Ω—å üóø", "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ", "–ë—É–º–∞–≥–∞ üìú"])
    if random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == "–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ" or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == "–ë—É–º–∞–≥–∞ üìú":
        answer_bot = '–ù–∏—á—å—è'
    elif random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ë—É–º–∞–≥–∞ üìú':
        answer_bot = '–Ø –≤—ã–π–≥—Ä–∞–ª'
    elif random_choice == '–ö–∞–º–µ–Ω—å üóø' and message.text == '–ë—É–º–∞–≥–∞ üìú' or random_choice == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ' and message.text == '–ö–∞–º–µ–Ω—å üóø' or random_choice == '–ë—É–º–∞–≥–∞ üìú' and message.text == '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ':
        answer_bot = '–¢—ã –≤—ã–π–≥—Ä–∞–ª'
    else:
        answer_bot = '–ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–≤–µ—Ç—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç! /start'
    await message.reply(
        f"–ú–æ–π –≤—ã–±–æ—Ä {random_choice}, –∞ —Ç–≤–æ–π {message.text}"

    )
    kb = [
        [types.KeyboardButton(text="–î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!"),
         types.KeyboardButton(text="–ù–µ —Ö–æ—á—É –±–æ–ª—å—à–µ.–°–ø–∞—Å–∏–±–æ!")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–°–¥–µ–ª–∞–π –≤—ã–±–æ—Ä:"
    )
    await message.answer(f"{answer_bot} –°—ã–≥—Ä–∞–µ–º –µ—â–µ?", reply_markup=keyboard)


@dp.message(F.text.lower() == "–¥–∞–≤–∞–π –µ—â—ë —Ä–∞–∑!")
async def cmd_random(message: types.Message):
    kb = [
        [types.KeyboardButton(text="–ö–∞–º–µ–Ω—å üóø"),
         types.KeyboardButton(text="–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ")],
        [types.KeyboardButton(text="–ë—É–º–∞–≥–∞ üìú")]

    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder=f"–°–¥–µ–ª–∞–π –≤—ã–±–æ—Ä:"
    )
    await message.reply(f'GUT! –°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!', reply_markup=keyboard)


@dp.message(F.text.lower() == "–Ω–µ —Ö–æ—á—É –±–æ–ª—å—à–µ.—Å–ø–∞—Å–∏–±–æ!")
async def cmd_random(message: types.Message):
    await message.reply(
        "–ñ–∞–ª—å. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, —Å–∫–∞–∂–∏ –º–Ω–µ!"
    )
    

# —Å–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–ª–µ—Ç –Ω–µ –∫–æ–º–∞–Ω–¥—É
async def handle_text(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ç–µ–∫—Å—Ç,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É!")


async def handle_photo(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É!")


async def handle_video(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∏–¥–µ–æ,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É! ")


async def handle_audio(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∞—É–¥–∏–æ,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É! ")


async def handle_document(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É! ")


async def handle_animation(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—é,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É! ")


async def handle_sticker(message: types.Message):
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ç–∏–∫–µ—Ä,–∞ –Ω—É–∂–Ω–æ –∫–æ–º–∞–Ω–¥—É! ")


@dp.message()
async def handle_text_message(message: types.Message):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
    if message.text:
        await handle_text(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ
    elif message.photo:
        await handle_photo(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ –≤–∏–¥–µ–æ
    elif message.video:
        await handle_video(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ –∞—É–¥–∏–æ
    elif message.audio:
        await handle_audio(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç
    elif message.document:
        await handle_document(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ –≥–∏—Ñ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
    elif message.animation:
        await handle_animation(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –ø—Ä–æ—Å—Ç–æ —Å—Ç–∏–∫–µ—Ä
    elif message.sticker:
        await handle_sticker(message)
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–æ–µ
    else:
        await message.answer('–ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É')


# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)


# –∑–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ
if __name__ == "__main__":
    asyncio.run(main())
